version: '3.8'

services:
  sofy-music-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sofy-music-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - RATE_LIMIT_PER_MINUTE=60
      - MAX_CONCURRENT_REQUESTS=10
      - REQUEST_TIMEOUT=300
      - RETRY_ATTEMPTS=3
      - RETRY_DELAY=1
      - ENABLE_METRICS=true
      - ENABLE_LOGGING=true
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sofy-network

  # Optional: Add Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: sofy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - sofy-network

  # Optional: Add Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: sofy-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - sofy-network

  # Optional: Add Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sofy-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - sofy-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  sofy-network:
    driver: bridge 